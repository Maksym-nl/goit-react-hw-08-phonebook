{"version":3,"file":"static/js/404.7a675ea5.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/Form/Form.styled.jsx","redux/contacts/selectors.js","components/Form/Form.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/Contactlist.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { Grid } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <Grid\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n      />\n    </LoaderWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NameLabel = styled.label`\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 5px;\n  margin-left: 8px;\n  margin-right: 20px;\n  background-color: antiquewhite;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nexport const getContacts = state => state.contacts.contacts.items;\nexport const getFilter = state => state.filter;\n\nexport const getFilterContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { addContact } from '../../redux/contacts/operations';\nimport { GoSearch } from 'react-icons/go';\nimport { NameLabel, Input } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { nanoid } from 'nanoid';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const isExist = contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n    if (isExist) {\n      alert(`${name} is Exist`);\n      return;\n    }\n    dispatch(addContact({ name, number, id: nanoid() }));\n    reset();\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <NameLabel>\n        Name:\n        <Input\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n        />\n      </NameLabel>\n      <NameLabel>\n        Number:\n        <Input\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n        />\n      </NameLabel>\n      <button type=\"submit\">\n        <GoSearch size=\"40px\" />\n      </button>\n    </form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NameLabel = styled.label`\n  font-size: 20px;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  padding: 5px;\n  margin-left: 8px;\n  margin-right: 20px;\n  background-color: antiquewhite;\n`;\n","import React from 'react';\nimport { NameLabel, Input } from './Filter.styled';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <NameLabel>\n      Фильтр по имени\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </NameLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 45px;\n  flex-wrap: wrap;\n  flex-direction: row;\n  cursor: pointer;\n`;\n\nexport const ListItem = styled.li`\n  /* width: calc(100% / 3); */\n  border: 1px solid;\n  color: black;\n  display: grid;\n  justify-items: center;\n  padding: 15px;\n  border-radius: ${props => props.theme.radii.lg};\n  background: aliceblue;\nb\n\n  /* :hover {\n    background-color: green; */\n  }\n`;\n\nexport const NameItem = styled.p`\n  font-size: 25px;\n  font-weight: bold;\n  color: ${props => {\n    return props.color;\n  }};\n`;\n\nexport const ContactItem = styled.p`\n  font-size: 20px;\n  color: ${props => {\n    return props.color;\n  }};\n`;\n\nexport const BtnItem = styled.button`\n  width: 100%;\n  padding: 15px;\n  font-size: 20px;\n  color: green;\n  font-weight: bold;\n  cursor: pointer;\n`;\n","import {\n  List,\n  ListItem,\n  NameItem,\n  ContactItem,\n  BtnItem,\n} from './Contactlist.styled';\nimport { ImCross } from 'react-icons/im';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport function ContactList() {\n  const contacts = useSelector(getFilterContacts);\n  // console.log(contacts);\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {' '}\n      {contacts.map(contact => (\n        <ListItem key={contact.id}>\n          <NameItem color=\"blue\">{contact.name}</NameItem>\n          <ContactItem color=\"green\">{contact.number}</ContactItem>\n          <BtnItem onClick={() => dispatch(deleteContact(contact.id))}>\n            Удалить\n            <ImCross />\n          </BtnItem>\n        </ListItem>\n      ))}{' '}\n    </List>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport { Form } from 'components/Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useSelector(state => state.contacts.contacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      {' '}\n      {isLoading && <Loader />}\n      <Form />\n      <Filter />\n      <ContactList />\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["LoaderWrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","Grid","height","width","color","ariaLabel","radius","NameLabel","Input","_templateObject2","getContacts","state","contacts","items","getFilter","filter","getFilterContacts","createSelector","contact","name","toLowerCase","includes","Form","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","handleInputChange","e","_e$target","target","value","_jsxs","onSubmit","preventDefault","find","alert","concat","addContact","id","nanoid","currentTarget","reset","onChange","type","pattern","title","required","GoSearch","size","Filter","event","setFilter","List","ListItem","props","theme","radii","lg","NameItem","_templateObject3","ContactItem","_templateObject4","BtnItem","_templateObject5","ContactList","map","onClick","deleteContact","ImCross","_useSelector","isLoading","error","useEffect","fetchContacts"],"sourceRoot":""}